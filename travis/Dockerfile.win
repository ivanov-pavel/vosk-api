FROM debian:11

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        make \
        git \
        automake \
        autoconf \
        libtool \
        pkg-config \
        cmake \
        g++ \
        g++-mingw-w64-x86-64 \
        xz-utils \
        patch \
        python3 \
        python3-pip \
        zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*

# Environment for cross-compilation
ENV HOST=x86_64-w64-mingw32
ENV PREFIX=/opt/kaldi/local
ENV CFLAGS="-O3 -pipe -static -static-libgcc -static-libstdc++ -fvisibility=hidden"
ENV CXXFLAGS="$CFLAGS -DFST_NO_DYNAMIC_LINKING"
ENV LDFLAGS="-static"

# ---- Build OpenFST (static) ----
RUN git clone --depth=1 https://github.com/alphacep/openfst /tmp/openfst && \
    cd /tmp/openfst && autoreconf -i && \
    ./configure \
        --prefix=$PREFIX \
        --enable-static --disable-shared \
        --with-pic --disable-bin \
        --enable-lookahead-fsts --enable-ngram-fsts \
        --host=$HOST \
        CXX=$HOST-g++-posix CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS" && \
    make -j$(nproc) && make install && rm -rf /tmp/openfst

# ---- Build OpenBLAS (static, USE_THREAD=1, MAX_CPU_NUMBER=64) ----
RUN git clone -b v0.3.24 --single-branch https://github.com/xianyi/OpenBLAS /tmp/OpenBLAS && \
    cd /tmp/OpenBLAS && \
    make BINARY=64 \
         CC=$HOST-gcc \
         ONLY_CBLAS=1 \
         USE_THREAD=1 \
         USE_LOCKING=1 \
         DYNAMIC_ARCH=1 \
         TARGET=NEHALEM \
         NO_SHARED=1 \
         MAX_CPU_NUMBER=64 -j$(nproc) && \
    make PREFIX=$PREFIX install && rm -rf /tmp/OpenBLAS

# ---- Build CLAPACK (static) ----
RUN git clone -b v3.2.1 --single-branch https://github.com/alphacep/clapack /tmp/clapack && \
    mkdir /tmp/clapack/BUILD && cd /tmp/clapack/BUILD && \
    cmake .. \
        -DCMAKE_SYSTEM_NAME=Windows \
        -DCMAKE_CROSSCOMPILING=True \
        -DCMAKE_C_COMPILER=$HOST-gcc \
        -DCMAKE_C_FLAGS="$CFLAGS" \
        -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS" && \
    make -C F2CLIBS/libf2c && make -C BLAS && make -C SRC && \
    find . -name "*.a" -exec cp {} $PREFIX/lib \; && \
    rm -rf /tmp/clapack

# ---- Build Kaldi (vosk-android branch, static) ----
RUN git clone -b vosk-android --single-branch https://github.com/alphacep/kaldi /opt/kaldi/kaldi && \
    cd /opt/kaldi/kaldi/src && \
    CXX=$HOST-g++-posix ./configure \
        --static \
        --use-cuda=no \
        --mingw=yes \
        --mathlib=OPENBLAS_CLAPACK \
        --host=$HOST \
        --openblas-clapack-root=$PREFIX \
        --fst-root=$PREFIX \
        --fst-version=1.8.0 && \
    make depend -j$(nproc) && \
    make -j$(nproc) online2 rnnlm && \
    echo "✅ Kaldi static build complete"

# ---- Merge all static libs into single vosk.lib ----
RUN mkdir -p /out && \
    find /opt/kaldi/kaldi/src -name "*.a" -exec cp {} /out \; && \
    cp -r $PREFIX/lib/*.a /out && \
    cd /out && \
    echo "CREATE vosk.lib" > merge.mri && \
    for f in *.a; do echo "ADDLIB $f" >> merge.mri; done && \
    echo "SAVE" >> merge.mri && echo "END" >> merge.mri && \
    $HOST-ar -M < merge.mri && \
    rm merge.mri && rm -f *.a && \
    # Copy Vosk header
    mkdir -p include && \
    if [ -f /opt/kaldi/kaldi/src/vosk_api.h ]; then \
        cp /opt/kaldi/kaldi/src/vosk_api.h include/; \
    fi && \
    echo "✅ vosk.lib successfully created"

WORKDIR /out

# Stage 1: Build dependencies
FROM debian:11 as deps

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates g++ bzip2 unzip make wget git python3 \
        zlib1g-dev cmake xz-utils automake autoconf libtool \
        pkg-config g++-mingw-w64-x86-64 \
    && rm -rf /var/lib/apt/lists/*

# Build OpenFST
RUN mkdir -p /opt/kaldi \
    && git clone https://github.com/alphacep/openfst \
    && cd openfst \
    && autoreconf -i \
    && CXX=x86_64-w64-mingw32-g++-posix CXXFLAGS="-O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING -static -std=c++17" \
        LDFLAGS="-static" \
        ./configure --prefix=/opt/kaldi/local \
        --disable-shared --enable-static --with-pic --disable-bin \
        --enable-lookahead-fsts --enable-ngram-fsts --host=x86_64-w64-mingw32 \
    && make -j $(nproc) \
    && make install

# Build OpenBLAS
RUN cd /opt/kaldi \
    && git clone -b v0.3.20 --single-branch https://github.com/xianyi/OpenBLAS \
    && cd OpenBLAS \
    && make HOSTCC=gcc BINARY=64 CC=x86_64-w64-mingw32-gcc FC=x86_64-w64-mingw32-gfortran ONLY_CBLAS=1 DYNAMIC_ARCH=1 TARGET=NEHALEM USE_LOCKING=1 USE_THREAD=0 -j $(nproc) \
    && make PREFIX=/opt/kaldi/local install

# Build CLAPACK
RUN cd /opt/kaldi \
    && git clone -b v3.2.1  --single-branch https://github.com/alphacep/clapack \
    && mkdir clapack/BUILD \
    && cd clapack/BUILD \
    && cmake -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc-posix -DCMAKE_SYSTEM_NAME=Windows -DBUILD_SHARED_LIBS=OFF .. \
    && make -C F2CLIBS/libf2c \
    && make -C BLAS \
    && make -C SRC \
    && find . -name "*.a" -exec cp {} /opt/kaldi/local/lib \;

# Build Kaldi
RUN cd /opt/kaldi \
    && git clone -b vosk-android --single-branch https://github.com/alphacep/kaldi \
    && cd kaldi/src \
    && CXX=x86_64-w64-mingw32-g++-posix CXXFLAGS="-O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING -static -std=c++17" LDFLAGS="-static" ./configure --static --mingw=yes --use-cuda=no \
        --mathlib=OPENBLAS_CLAPACK \
        --host=x86_64-w64-mingw32 --openblas-clapack-root=/opt/kaldi/local \
        --fst-root=/opt/kaldi/local --fst-version=1.8.0 \
    && make depend -j \
    && make -j $(nproc) online2 rnnlm

# Stage 2: Build vosk-api (changes frequently)
FROM deps as builder

RUN cd /opt/kaldi \
    && git clone https://github.com/alphacep/vosk-api \
    && cd vosk-api/src \
    && x86_64-w64-mingw32-g++-posix -std=c++17 -O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING -static -I/opt/kaldi/local/include -I/opt/kaldi/kaldi/src -D_USE_MATH_DEFINES -DWIN32 -c -o recognizer.o recognizer.cc \
    && x86_64-w64-mingw32-g++-posix -std=c++17 -O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING -static -I/opt/kaldi/local/include -I/opt/kaldi/kaldi/src -D_USE_MATH_DEFINES -DWIN32 -c -o model.o model.cc \
    && x86_64-w64-mingw32-g++-posix -std=c++17 -O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING -static -I/opt/kaldi/local/include -I/opt/kaldi/kaldi/src -D_USE_MATH_DEFINES -DWIN32 -c -o vosk_api.o vosk_api.cc \
    && x86_64-w64-mingw32-g++-posix -std=c++17 -O3 -ftree-vectorize -DFST_NO_DYNAMIC_LINKING -static -I/opt/kaldi/local/include -I/opt/kaldi/kaldi/src -D_USE_MATH_DEFINES -DWIN32 -c -o language_model.o language_model.cc \
    && x86_64-w64-mingw32-g++-posix -shared -o libvosk.dll recognizer.o model.o vosk_api.o language_model.o \
        -static -L/opt/kaldi/local/lib \
        -lkaldi-online2 -lkaldi-rnnlm -lkaldi-decoder -lkaldi-feat -lkaldi-lat -lkaldi-fstext -lkaldi-hmm \
        -lkaldi-transform -lkaldi-gmm -lkaldi-tree -lkaldi-util -lkaldi-matrix -lkaldi-base -lkaldi-nnet3 \
        -lkaldi-chain -lopenblas -lclapack -lf2c -lfst -lfstngram -lfstlookahead -l:libfst.a -lws2_32 -lpthread \
        -static-libgcc -static-libstdc++ -Wl,--out-implib,libvosk.lib

# Stage 3: Final output
FROM scratch as output
COPY --from=builder /opt/kaldi/vosk-api/src/libvosk.lib /
COPY --from=builder /opt/kaldi/vosk-api/src/*.h /
